{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexmolod/Projects/test-next-movies/src/app/api/auth/login/route.ts"],"sourcesContent":["\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { type NextRequest } from 'next/server';\n\n\n// This should be replaced when you have a database\nconst users = [\n  { id: 1, email: 'user@test.com', password: '$2a$12$Kd0pbwLzKu9x10NXwum6vu/WTCNTHWsWCUdwwQ90IgdwDwhblLtqa' } // password: 'user-password'\n];\n\ninterface LoginRequestBody {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n}\n\nexport async function POST(req: NextRequest) {\n  const body = await req.json();\n\n  const { email, password, rememberMe }: LoginRequestBody = body;\n\n  console.log('body', body);\n  const user = users.find((user) => user.email === email);\n  const expireDate = rememberMe ? '30d' : '1h';\n\n  console.log('user', user);\n\n  if (!user) {\n    return Response.json({ message: 'Invalid credentials' }, { status: 401 });\n  }\n\n  const isPasswordCorrect = await bcrypt.compare(password, user.password);\n\n  console.log('isPasswordCorrect', isPasswordCorrect);\n  console.log('password', password);\n  console.log('user.password', user.password);\n\n  if (!isPasswordCorrect) {\n    return Response.json({ message: 'Invalid credentials' }, { status: 401 });\n  }\n\n  const token = jwt.sign({ userId: user.id, email: user.email }, 'secret-key', { expiresIn: expireDate });\n\n  return Response.json({ token});\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AAIA,mDAAmD;AACnD,MAAM,QAAQ;IACZ;QAAE,IAAI;QAAG,OAAO;QAAiB,UAAU;IAA+D,EAAE,4BAA4B;CACzI;AAQM,eAAe,KAAK,GAAgB;IACzC,MAAM,OAAO,MAAM,IAAI,IAAI;IAE3B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAqB;IAE1D,QAAQ,GAAG,CAAC,QAAQ;IACpB,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,KAAK,KAAK;IACjD,MAAM,aAAa,aAAa,QAAQ;IAExC,QAAQ,GAAG,CAAC,QAAQ;IAEpB,IAAI,CAAC,MAAM;QACT,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IACzE;IAEA,MAAM,oBAAoB,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IAEtE,QAAQ,GAAG,CAAC,qBAAqB;IACjC,QAAQ,GAAG,CAAC,YAAY;IACxB,QAAQ,GAAG,CAAC,iBAAiB,KAAK,QAAQ;IAE1C,IAAI,CAAC,mBAAmB;QACtB,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IACzE;IAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE,QAAQ,KAAK,EAAE;QAAE,OAAO,KAAK,KAAK;IAAC,GAAG,cAAc;QAAE,WAAW;IAAW;IAErG,OAAO,SAAS,IAAI,CAAC;QAAE;IAAK;AAC9B"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}